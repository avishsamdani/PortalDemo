<apex:page controller="TestPageController" showHeader="false" standardSTyleSheets="false">
<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <apex:stylesheet value="{!URLFOR($Resource.salesforcelight, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.15/angular.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1" />    
    <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
    <script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css"/>
    <style>
        .sectionTitle {
            text-align:center;
            background-color:rgb(81,12,118);
            padding:10px !important;
            margin-top:5px !important;
            text-align:left;
        }
        
        .slds .slds-button--brand {
            text-align:center;
            margin:5px;
            background:#795F87 !important;
            border:#795F87 !important;
        }
        
        .slds .slds-text-heading--label{
            color:white !important;  
        }
        .sectionButton{
            margin: auto !important;
            width: 100px !important;
        }
        .slds img {
            max-width: 4%;
            margin-top: 1%;
        }
        .slds .slds-pill {
            padding: 10px;
        }    
    </style>
    <div class="slds">
        <div ng-app="mainApp" ng-controller="mainAppController" >
            <input type="hidden" ng-model="test" id="test" />
            <form name="contactForm" class="slds-form--horizontal">
              
                <div ng-repeat="section in sectionList">
                    <div class="slds-grid slds-wrap">
                        <div class="slds-col slds-size--1-of-1" ng-repeat="obj in modelList[section.modelName]">
                            <div class="slds-grid slds-wrap" ng-if='section.noOfcolumn == 1'>
                                <p class="sectionTitle slds-col slds-size--1-of-1 slds-text-heading--label slds-m-bottom--small">{{section.title}}</p>
                                <div class='slds-size--1-of-1' ng-repeat="fieldInfo in section.field">
                                    <div class="slds-form-element" ng-if='fieldInfo.rendered'>
                                        <label class="slds-form-element__label">{{fieldInfo.label}}</label>
                                        <div class="slds-form-element__control">
                                            <input class="slds-input" required='true' type='text' ng-model='obj[fieldInfo.APIName]' />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <div class="slds-grid slds-wrap" ng-if='section.noOfcolumn == 2'>
                            <p class="sectionTitle slds-col slds-size--1-of-1 slds-text-heading--label slds-m-bottom--small">{{section.title}}</p>
                            <div  ng-repeat="fieldInfo in section.field" class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-2">
                                <div  ng-if='fieldInfo.isBlank == false'>
                                    <div class="slds-form-element" ng-if="fieldInfo.type  == 'date' && fieldInfo.rendered">
                                        <label class="slds-form-element__label">{{fieldInfo.label}}</label>
                                        <div class="slds-form-element__control" >
                                            <input jqdatepicker="jqdatepicker"   class="customDatePicker slds-input" type='text' ng-model='obj[fieldInfo.APIName]' />                                         
                                        </div>
                                    </div>
                                    <div class="slds-form-element" ng-if="fieldInfo.type  == 'picklist' && fieldInfo.rendered ">
                                        <label class="slds-form-element__label">{{fieldInfo.label}}</label>
                                        <div class="slds-form-element__control" >                                   
                                            <select class="slds-select" name="mySelect" id="mySelect"
                                            ng-options="option.id as option.name for option in fieldInfo.selectOptionList "
                                            ng-model="obj[fieldInfo.APIName]" ng-value="option.name">
                                            <option value="" ng-if="false"></option>
                                            </select>                                                                         
                                        </div>
                                    </div>
                                    <div class="slds-form-element" ng-if="fieldInfo.type  == 'checkbox' && fieldInfo.rendered ">                                
                                        <label class="slds-form-element__label">{{fieldInfo.label}}</label>
                                         <div class="slds-form-element__control" >
                                          <input  type='checkbox' ng-model='obj[fieldInfo.APIName]' />                                                                                  
                                        </div>                                  
                                    </div>
                                    <div class="slds-form-element" ng-if="fieldInfo.type  == 'text' && fieldInfo.rendered ">                                
                                        <label class="slds-form-element__label">{{fieldInfo.label}}</label>
                                         <div class="slds-form-element__control" >
                                          <input   class="slds-input"  type='text' ng-model='obj[fieldInfo.APIName]' />                                                                                  
                                        </div>                                  
                                    </div>
                                   
                                    <div class="slds-form-element" ng-if="fieldInfo.type  == 'lookup'">
                                        <c:LookupInput fieldInformation="{{fieldInfo}}" objectVar="{{obj}}" />     
                                    </div>
                              </div>
                            <div style="height: 30px;" ng-if='fieldInfo.isBlank'>                                
                            </div>
                         </div>
                        <div ng-if="section.isRepeat && modelList[section.modelName].length > 1">                
                          <button class="slds-button slds-button--brand" ng-click="delete(section.modelName,$index)">{{section.deleteButtonLabel }}</button>       
                        </div>
                      </div>
                     
                   </div>
                    <div ng-if="section.isRepeat">
                          <button class="slds-button slds-button--brand" ng-click="add(section.modelName);">{{section.buttonLabel}}</button>
                    </div>  
                </div>
              
             </div>
           
            <div class="slds-grid slds-wrap">
                <div class='slds-size--1-of-1 sectionButton'>
                    <button class="slds-button slds-button--brand" ng-click="save()">Submit</button>
                </div>
            </div>
          </form>
          
       </div>
    </div>
    <script>
        $( document ).ready(function() {
             initDatePicker();
             $('input').each(function(){
                $(this).attr('autocomplete', 'off');
             });          
        }); 
        
        function initDatePicker(){
            $( ".customDatePicker" ).each(function( ) {
                $( this ).datepicker();           
            });
        }
    </script>
    <script>  
        var mainApp = angular.module("mainApp", []);    
           
        mainApp.controller('mainAppController', function($scope, $http, $sce, DataService,$q,$timeout){
            $scope.test = 'test';
            $scope.items = [];
            $scope.modelList = {!modelsJSON};
            $scope.sectionList = {!jsonData};
            $scope.lookupString = '';
            
            $scope.save= function() {
                DataService.saveData($scope.modelList).then(function(data) {
                });
            }
            
            
            $scope.add= function(modelname) {
                var sampleObj = new Object() ;
                $.each($scope.modelList[modelname][0], function(key, element) {
                    if(key != '$$hashKey')
                        sampleObj[key] = null;
                }); 
                $(sampleObj).attr('attributes', $($scope.modelList[modelname][0]).attr('attributes'));
                $scope.modelList[modelname].push(sampleObj );
                $timeout(function () {
                   initDatePicker();
                });
            } 
            
            $scope.delete= function(modelName,index) {
                var c =  $scope.modelList[modelName].splice(index,1);   
                if( c[0] != null && c[0].Id != null){ 
                  Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.TestPageController.deleteData}',
                JSON.stringify(c[0]), 
                function(result, event){
                    if (event.status) {
                       
                    } else if (event.type === 'exception') {
                       
                    } else {
                       
                    }
                }, 
                {escape: true}
            );
                }else{
               
                }  
            }
            
            $scope.htmlbinding = function(value) {
                return $sce.trustAsHtml(value);
            };
            
            $scope.removeSelection = function(fieldIndex, sectionIndex, fieldApiName, fieldDisplayApiName) {
                //alert(fieldIndex + ' -- ' + sectionIndex);
                $scope.modelList[$scope.sectionList[sectionIndex].modelName][fieldIndex][fieldApiName] = '';
                $scope.modelList[$scope.sectionList[sectionIndex].modelName][fieldIndex][fieldDisplayApiName].Name = '';
            }
            
            $scope.selectLookup = function(obj, fieldIndex, sectionIndex, fieldApiName, fieldDisplayApiName) {
                $scope.modelList[$scope.sectionList[sectionIndex].modelName][fieldIndex][fieldApiName] = obj.Id;
                if(typeof $scope.modelList[$scope.sectionList[sectionIndex].modelName][fieldIndex][fieldDisplayApiName] == 'undefined' ||  $scope.modelList[$scope.sectionList[sectionIndex].modelName][fieldIndex][fieldDisplayApiName] == null){
                    $scope.modelList[$scope.sectionList[sectionIndex].modelName][fieldIndex][fieldDisplayApiName] = new Object();
                    $scope.modelList[$scope.sectionList[sectionIndex].modelName][fieldIndex][fieldDisplayApiName].id = obj.Id; 
                }
                $scope.modelList[$scope.sectionList[sectionIndex].modelName][fieldIndex][fieldDisplayApiName].Name = obj.Name;
            }
            
            
            $scope.getLookupDetails = function(object, searchStringValue, fieldIndex, sectionIndex, fieldApiName, fieldDisplayApiName) {
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.TestPageController.getLookupDataByObjectAndName}',
                    JSON.stringify(object), JSON.stringify(searchStringValue),
                    function(result, event){
                        console.log($scope.sectionList[sectionIndex].field[fieldIndex].lookupValueList);
                        if(event.statusCode == 200) {
                            $timeout(function() {
                                $scope.sectionList[sectionIndex].field[fieldIndex].lookupValueList  = result;
                                console.log('lookupValueList@@@' + $scope.sectionList[sectionIndex].field[fieldIndex].lookupValueList);
                            });    
                        }
                    },
                    {escape: true}
                );      
            }      
        });
        
        mainApp.service('DataService', function($q) {              
            this.saveData= function(a) {
            delete a.$$hashKey;
                        
            var serverData = angular.toJson(a);
            var deferred = $q.defer();
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.TestPageController.updateData}',
                serverData , 
                    function(result, event){
                        if (event.status) {
                            var customer = JSON.stringify(result);
                            var find = '\'';
                            var re = new RegExp(find, 'g');
                            customer = customer.replace(re, '');
                            deferred.resolve(JSON.parse(customer));
                        } else if (event.type === 'exception') {
                            deferred.reject(JSON.parse('[]'));
                        } else {
                          
                        }
                    }, 
                    {escape: true}
                 );              
                 return deferred.promise;
            }
        });
    
    </script>
</html>    
</apex:page>